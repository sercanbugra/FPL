{% load static %}
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>FPL Dashboard</title>

  <!-- Bootstrap & DataTables -->
  <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css">
  <link rel="stylesheet" href="https://cdn.datatables.net/buttons/2.4.1/css/buttons.dataTables.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.3.0/css/bootstrap.min.css">
  <link rel="stylesheet" href="{% static 'fpldash/style.css' %}?v=2">
</head>

<body>
  <div class="main-container" id="mainContainer">

    <!-- LEFT PANEL -->
    <div id="my-team">
      <h3>My FPL Team</h3>
      <div id="team-list"><p>Loading your team...</p></div>
    </div>

    <!-- Vertical Resizer -->
    <div class="resizer vertical" id="resizerVertical"></div>

    <!-- RIGHT SIDE -->
    <div class="right-side">

      <!-- TOP: FPL TABLE -->
      <div id="stats-section">
        <h2>FPL Top Players (Dynamic Table)</h2>
        <div id="table-container">
          <table id="fplTable" class="display table table-striped">
            <thead><tr></tr></thead>
            <tbody></tbody>
          </table>
        </div>
      </div>

      <!-- Horizontal Resizer -->
      <div class="resizer horizontal" id="resizerHorizontal"></div>

      <!-- BOTTOM: FORECAST -->
      <div id="suggestions">
        <h3>Next GW Forecast</h3>
        <div id="forecast-section">
          <table id="forecastTable" class="display table table-striped">
            <thead><tr></tr></thead>
            <tbody></tbody>
          </table>
          <p id="forecastError" class="text-danger" style="display:none;"></p>
        </div>
      </div>
    </div>
  </div>

  <!-- Bottom-right logo -->
  <img id="bottom-logo" src="{% static 'fpldash/images/logo.jpg' %}" alt="GUL TECHS Logo">

  <!-- Player Details Modal -->
  <div class="modal fade" id="playerModal" tabindex="-1" aria-labelledby="playerModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-header bg-primary text-white">
          <h5 class="modal-title" id="playerModalLabel">Player Details</h5>
          <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <div id="modal-player-details"></div>
        </div>
      </div>
    </div>
  </div>

  <!-- JS LIBRARIES -->
  <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
  <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
  <script src="https://cdn.datatables.net/buttons/2.4.1/js/dataTables.buttons.min.js"></script>
  <script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.html5.min.js"></script>
  <script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.print.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

  <script>
    let weeklyChart = null;

    // ================== PANEL RESIZERS ==================
    function setupResizablePanels() {
      const container = document.getElementById("mainContainer");
      const left = document.getElementById("my-team");
      const right = document.querySelector(".right-side");
      const topRight = document.getElementById("stats-section");
      const vResizer = document.getElementById("resizerVertical");
      const hResizer = document.getElementById("resizerHorizontal");

      let activeResizer = null;

      vResizer.addEventListener("mousedown", (e) => {
        activeResizer = "vertical";
        document.body.style.cursor = "col-resize";
        e.preventDefault();
      });

      hResizer.addEventListener("mousedown", (e) => {
        activeResizer = "horizontal";
        document.body.style.cursor = "row-resize";
        e.preventDefault();
      });

      window.addEventListener("mousemove", (e) => {
        if (!activeResizer) return;

        if (activeResizer === "vertical") {
          const containerWidth = container.offsetWidth;
          const leftWidth = e.clientX / containerWidth * 100;
          if (leftWidth > 10 && leftWidth < 40) {
            left.style.flex = `0 0 ${leftWidth}%`;
          }
        } else if (activeResizer === "horizontal") {
          const rightRect = right.getBoundingClientRect();
          const yOffset = e.clientY - rightRect.top;
          const rightHeight = right.offsetHeight;
          const topPercent = (yOffset / rightHeight) * 100;
          if (topPercent > 20 && topPercent < 80) {
            topRight.style.flex = `0 0 ${topPercent}%`;
          }
        }
      });

      window.addEventListener("mouseup", () => {
        activeResizer = null;
        document.body.style.cursor = "default";
      });
    }

    // ================== LOAD DATA ==================
    async function loadData() {
      // --- MY TEAM ---
      const teamResponse = await fetch('/api/myteam');
      const teamData = await teamResponse.json();
      const myTeamSet = new Set(teamData.map(p => p.web_name));
      const teamDiv = document.getElementById('team-list');
      teamDiv.innerHTML = '';

      const starters = teamData.filter(p => p.starting);
      const bench = teamData.filter(p => !p.starting);

      const startersHeader = document.createElement('h4');
      startersHeader.textContent = "Starting XI";
      teamDiv.appendChild(startersHeader);

      starters.forEach(p => {
        const playerDiv = document.createElement('div');
        playerDiv.classList.add('player-card');
        playerDiv.innerHTML = `
          <img src="${p.photo}" onerror="this.src='https://cdn-icons-png.flaticon.com/512/149/149071.png'">
          <div>
            <span>${p.web_name} ${p.is_captain ? '(C)' : (p.is_vice_captain ? '(VC)' : '')}</span>
            <small>${p.team} | ${p.position}</small>
            <small style="color:#007bff;">Last GW: <strong>${p.last_gw_points} pts</strong></small>
          </div>`;
        teamDiv.appendChild(playerDiv);
      });

      const benchHeader = document.createElement('h4');
      benchHeader.textContent = "Bench";
      teamDiv.appendChild(benchHeader);

      bench.forEach(p => {
        const playerDiv = document.createElement('div');
        playerDiv.classList.add('player-card');
        playerDiv.style.opacity = '0.75';
        playerDiv.innerHTML = `
          <img src="${p.photo}" onerror="this.src='https://cdn-icons-png.flaticon.com/512/149/149071.png'">
          <div>
            <span>${p.web_name}</span>
            <small>${p.team} | ${p.position}</small>
            <small style="color:#007bff;">Last GW: <strong>${p.last_gw_points} pts</strong></small>
          </div>`;
        teamDiv.appendChild(playerDiv);
      });

      // --- FPL TABLE ---
      const dataResponse = await fetch('/api/data');
      const fplData = await dataResponse.json();
      const columns = Object.keys(fplData[0]).map(key => ({ data: key, title: key.replace(/_/g, ' ') }));

      const headerRow = $('#fplTable thead tr');
      headerRow.empty();
      columns.forEach(col => headerRow.append(`<th>${col.title}</th>`));

      if ($.fn.dataTable.isDataTable('#fplTable')) {
        $('#fplTable').DataTable().destroy();
      }

      // Add filters
      $('#fplTable thead').append('<tr class="filters"></tr>');
      const filterRow = $('#fplTable thead tr.filters');
      filterRow.empty();

      columns.forEach(col => {
        if (col.title === "Position") {
          const uniquePositions = [...new Set(fplData.map(p => p.Position))];
          const options = uniquePositions.map(v => `<option value="${v}">${v}</option>`).join('');
          filterRow.append(`
            <th>
              <select style="width:100%; font-size:11px;">
                <option value="">All</option>${options}
              </select>
            </th>`);
        } else {
          filterRow.append(`<th><input type="text" placeholder="Filter ${col.title}" style="width:100%; font-size:11px;"></th>`);
        }
      });

      const table = $('#fplTable').DataTable({
        data: fplData,
        columns: columns,
        pageLength: 15,
        responsive: true,
        autoWidth: false,
        dom: 'Bfrtip',
        buttons: ['copy', 'csv', 'excel', 'print'],
        orderCellsTop: true,
        createdRow: function (row, data) {
          if (myTeamSet && myTeamSet.has(data.Player)) {
            $(row).addClass('in-my-team');
          }
        },
        initComplete: function () {
          const api = this.api();
          api.columns().every(function (i) {
            $('input, select', filterRow.children().eq(i)).on('keyup change clear', function () {
              if (api.column(i).search() !== this.value) {
                api.column(i).search(this.value).draw();
              }
            });
          });
        }
      });

      // === CLICK ROW ===
      $('#fplTable tbody').on('click', 'tr', async function () {
        const data = table.row(this).data();
        showPlayerModal(data);
      });
    }

    // ================== MODAL DETAILS ==================
    function showPlayerModal(player) {
      const detailsDiv = document.getElementById('modal-player-details');
      detailsDiv.innerHTML = '';

      const photoURL = player.PlayerPhoto
        ? `https://resources.premierleague.com/premierleague/photos/players/250x250/p${player.PlayerPhoto}.png`
        : 'https://cdn-icons-png.flaticon.com/512/149/149071.png';

      const card = document.createElement('div');
      card.classList.add('player-card', 'mb-3');
      card.innerHTML = `
        <img src="${photoURL}" onerror="this.src='https://cdn-icons-png.flaticon.com/512/149/149071.png'">
        <div>
          <h5>${player.Player}</h5>
          <small>${player.Team} | ${player.Position}</small>
        </div>
      `;

      const table = document.createElement('table');
      table.classList.add('table', 'table-sm', 'table-bordered', 'mt-2');
      for (const [key, value] of Object.entries(player)) {
        const row = document.createElement('tr');
        row.innerHTML = `<td><strong>${key}</strong></td><td>${value}</td>`;
        table.appendChild(row);
      }

      detailsDiv.appendChild(card);
      detailsDiv.appendChild(table);

      const modal = new bootstrap.Modal(document.getElementById('playerModal'));
      modal.show();
    }

    // ================== FORECAST TABLE ==================
    async function loadForecast() {
      try {
        const res = await fetch('/api/forecast');
        if (!res.ok) {
          const msg = `Failed to load forecast (status ${res.status})`;
          document.getElementById('forecastError').textContent = msg;
          document.getElementById('forecastError').style.display = 'block';
          return;
        }
        const forecast = await res.json();
        if (forecast.length > 0) {
          const cols = Object.keys(forecast[0]).map(k => ({ data: k, title: k.replace(/_/g, ' ') }));
          const header = $('#forecastTable thead tr');
          header.empty();
          cols.forEach(c => header.append(`<th>${c.title}</th>`));
          if ($.fn.dataTable.isDataTable('#forecastTable')) {
            $('#forecastTable').DataTable().destroy();
          }
          $('#forecastTable').DataTable({
            data: forecast,
            columns: cols,
            pageLength: 10,
            responsive: true,
            autoWidth: false,
            dom: 'Bfrtip',
            buttons: ['copy', 'csv', 'excel', 'print']
          });
        } else {
          document.getElementById('forecastError').textContent = 'No forecast data available';
          document.getElementById('forecastError').style.display = 'block';
        }
      } catch (e) {
        document.getElementById('forecastError').textContent = 'Error loading forecast: ' + e;
        document.getElementById('forecastError').style.display = 'block';
      }
    }

    // ================== INIT ==================
    window.onload = function() {
      setupResizablePanels();
      loadData();
      loadForecast();
    };
  </script>
</body>
</html>





